@import 'node_modules/terra-mixins/src/terra-mixins';
@import './variables';
@import './mixins';

// Inline
// Extends .list-unstyled, displays list items inline
.list-inline {
  > li {
    .separate-elements-inline(@gutter, margin);
    display: inline-block;
    max-width: 100%;
  }

  dfn {
    .text-bold();
    font-style: normal;
  }

  // Add dividing border between list items
  &.list-inline-divided > li {
    .border-end();
    .separate-elements-inline(@half-gutter, margin);
    .separate-elements-inline(@half-gutter, padding);

    &:last-child {
      .border-end(0);
    }
  }
}

// Divided tight
.list-divided {
  > li {
    .border-bottom();

    &:first-child {
      .border-top();
    }
  }
}

// Key-value lists
// Align keys to the left and values to the right of the container.
.list-key-value {
  .list-divided();

  li {
    .clearfix();

    > *,
    > a > * {
      .float-end();

      &:first-child {
        .float-start();
        .text-bold();
      }
    }

    // Requires first-child for higher specificity than >*:first-child
    > a:first-child {
      .clearfix();
      .float-none();
      .text-normal();
      display: block;
    }
  }
}

.key-value-invert {
  li {
    > *,
    > a > * {
      .text-bold();

      &:first-child {
        .text-normal();
      }
    }
  }
}

// Selectable lists
.list-selectable > li,
.list-multi-selectable > li {
  cursor: pointer;

  &:hover {
    background-color: @hover-background;
  }

  &[aria-selected] {
    background-color: @selected-background;
    color: @selected-color;

    // Need to call out <a> explicitly to override our default styles.
    a {
      color: @selected-color;
    }
  }

  // Reset hover cursor and background for list items that can not be selected/unselected
  &.selection-static:hover {
    background-color: inherit;
    cursor: default;

    // Need to override the specificity from `&.selection-static:hover`
    &[aria-selected] {
      background-color: @selected-background;
    }
  }
}
